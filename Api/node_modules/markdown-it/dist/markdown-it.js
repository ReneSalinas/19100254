/*! markdown-it 12.3.2 https://github.com/markdown-it/markdown-it @license MIT */
(function(global, factory) {
  typeof exports === "object" && typeof module !== "undefined" ? module.exports = factory() : typeof define === "function" && define.amd ? define(factory) : (global = typeof globalThis !== "undefined" ? globalThis : global || self, 
  global.markdownit = factory());
})(this, (function() {
  "use strict";
  function createCommonjsModule(fn, basedir, module) {
    return module = {
      path: basedir,
      exports: {},
      require: function(path, base) {
        return commonjsRequire(path, base === undefined || base === null ? module.path : base);
      }
    }, fn(module, module.exports), module.exports;
  }
  function getAugmentedNamespace(n) {
    if (n.__esModule) return n;
    var a = Object.defineProperty({}, "__esModule", {
      value: true
    });
    Object.keys(n).forEach((function(k) {
      var d = Object.getOwnPropertyDescriptor(n, k);
      Object.defineProperty(a, k, d.get ? d : {
        enumerable: true,
        get: function() {
          return n[k];
        }
      });
    }));
    return a;
  }
  function commonjsRequire() {
    throw new Error("Dynamic requires are not currently supported by @rollup/plugin-commonjs");
  }
  var require$$0 = {
    Aacute: "\xc1",
    aacute: "\xe1",
    Abreve: "\u0102",
    abreve: "\u0103",
    ac: "\u223e",
    acd: "\u223f",
    acE: "\u223e\u0333",
    Acirc: "\xc2",
    acirc: "\xe2",
    acute: "\xb4",
    Acy: "\u0410",
    acy: "\u0430",
    AElig: "\xc6",
    aelig: "\xe6",
    af: "\u2061",
    Afr: "\ud835\udd04",
    afr: "\ud835\udd1e",
    Agrave: "\xc0",
    agrave: "\xe0",
    alefsym: "\u2135",
    aleph: "\u2135",
    Alpha: "\u0391",
    alpha: "\u03b1",
    Amacr: "\u0100",
    amacr: "\u0101",
    amalg: "\u2a3f",
    amp: "&",
    AMP: "&",
    andand: "\u2a55",
    And: "\u2a53",
    and: "\u2227",
    andd: "\u2a5c",
    andslope: "\u2a58",
    andv: "\u2a5a",
    ang: "\u2220",
    ange: "\u29a4",
    angle: "\u2220",
    angmsdaa: "\u29a8",
    angmsdab: "\u29a9",
    angmsdac: "\u29aa",
    angmsdad: "\u29ab",
    angmsdae: "\u29ac",
    angmsdaf: "\u29ad",
    angmsdag: "\u29ae",
    angmsdah: "\u29af",
    angmsd: "\u2221",
    angrt: "\u221f",
    angrtvb: "\u22be",
    angrtvbd: "\u299d",
    angsph: "\u2222",
    angst: "\xc5",
    angzarr: "\u237c",
    Aogon: "\u0104",
    aogon: "\u0105",
    Aopf: "\ud835\udd38",
    aopf: "\ud835\udd52",
    apacir: "\u2a6f",
    ap: "\u2248",
    apE: "\u2a70",
    ape: "\u224a",
    apid: "\u224b",
    apos: "'",
    ApplyFunction: "\u2061",
    approx: "\u2248",
    approxeq: "\u224a",
    Aring: "\xc5",
    aring: "\xe5",
    Ascr: "\ud835\udc9c",
    ascr: "\ud835\udcb6",
    Assign: "\u2254",
    ast: "*",
    asymp: "\u2248",
    asympeq: "\u224d",
    Atilde: "\xc3",
    atilde: "\xe3",
    Auml: "\xc4",
    auml: "\xe4",
    awconint: "\u2233",
    awint: "\u2a11",
    backcong: "\u224c",
    backepsilon: "\u03f6",
    backprime: "\u2035",
    backsim: "\u223d",
    backsimeq: "\u22cd",
    Backslash: "\u2216",
    Barv: "\u2ae7",
    barvee: "\u22bd",
    barwed: "\u2305",
    Barwed: "\u2306",
    barwedge: "\u2305",
    bbrk: "\u23b5",
    bbrktbrk: "\u23b6",
    bcong: "\u224c",
    Bcy: "\u0411",
    bcy: "\u0431",
    bdquo: "\u201e",
    becaus: "\u2235",
    because: "\u2235",
    Because: "\u2235",
    bemptyv: "\u29b0",
    bepsi: "\u03f6",
    bernou: "\u212c",
    Bernoullis: "\u212c",
    Beta: "\u0392",
    beta: "\u03b2",
    beth: "\u2136",
    between: "\u226c",
    Bfr: "\ud835\udd05",
    bfr: "\ud835\udd1f",
    bigcap: "\u22c2",
    bigcirc: "\u25ef",
    bigcup: "\u22c3",
    bigodot: "\u2a00",
    bigoplus: "\u2a01",
    bigotimes: "\u2a02",
    bigsqcup: "\u2a06",
    bigstar: "\u2605",
    bigtriangledown: "\u25bd",
    bigtriangleup: "\u25b3",
    biguplus: "\u2a04",
    bigvee: "\u22c1",
    bigwedge: "\u22c0",
    bkarow: "\u290d",
    blacklozenge: "\u29eb",
    blacksquare: "\u25aa",
    blacktriangle: "\u25b4",
    blacktriangledown: "\u25be",
